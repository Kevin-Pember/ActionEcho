(()=>{let t={current:{actionSet:void 0,port:void 0,tab:void 0,actionPacket:void 0,editor:void 0},portArray:[],currentEditor:void 0,siteCache:void 0,uiLink:void 0,promisePorts:{tabs:[],push:e=>{t.promisePorts.tabs.push(e)},resolveTarget:e=>{let o,a=t.promisePorts.tabs.find(((t,a)=>{if(e.name==t.url)return o=a,!0}));a&&(a.resolve(e),console.log("%c Setting Current Port","background-color: green; font-size: 20px;"),t.current.port=e,t.promisePorts.tabs.splice(o,1))}},openTab:e=>new Promise(((o,a)=>{let r=t.portArray.find((t=>t.name==e));r?(chrome.tabs.update(r.tabId,{active:!0},(t=>{})),o(r)):(chrome.tabs.create({url:e,active:!0},(function(t){})),t.promisePorts.push({url:e,resolve:o,reject:a}))})),openURL:(e,o)=>new Promise(((a,r)=>{e.postMessage({action:"setURL",url:o}),t.promisePorts.push({url:o,resolve:a,reject:r})})),disconnectPort:e=>{e.disconnected=!0;let a=t.portArray.findIndex((t=>t.tabId==e.tabId));t.portArray.splice(a,1),0==t.portArray.length?t.current.port=void 0:t.current.port==e&&o.setCurrentPort(t.portArray[a]),e.editorActive&&t.closeEditor(),e.disconnected||e.disconnect()}},e={templates:{actionPacket:{v:1,site:void 0,action:"actionPacket",actions:[]}},runActions:async o=>{let a,r=e.getPackets(o);for(let e of r)a=e.site,"url"==a.format?(console.log(),t.current.port.name!=a.url&&(console.log("%c Forcing URL","background-color: green; font-size: 20px;"),await t.openURL(t.current.port,a.url))):await t.openTab(a.url),t.current.port.postMessage(e)},getUrls:t=>{let e=[];for(let o of t)"site"!=o.type||e.includes(o.url)||e.push(o.url);return e},getPackets:t=>{let o=t.filter((t=>"site"==t.type)),a=[];return o.forEach(((r,c)=>{let n=structuredClone(e.templates.actionPacket);n.actions=t.slice(t.indexOf(r)+1,c<o.length-1?t.indexOf(o[c+1]):t.length),n.site=r,a.push(n)})),a}},o={recording:!1,v:1,templates:{actionSet:{v:1,name:"",actions:[]},site:{type:"site",url:"",format:""},textAction:{type:"input",text:""}},data:{actionSet:void 0,site:{},textAction:{},caret:[],isSelection:!1,edit:[],redo:[],inputs:[]},startRecord:e=>{o.recording=!0,o.data.actionSet=structuredClone(o.templates.actionSet),o.data.site&&(o.data.actionSet.actions.push(o.data.site),o.data.site=void 0);try{t.current.port.postMessage({action:"startRecord"}),e({log:"started"})}catch{console.log("%c No Current Port","font-size: 20px; background-color: red;"),e({log:"noPort"})}},stopRecord:e=>{t.current.port.postMessage({action:"stopRecord"}),o.data.actionSet.log="finished",o.recording=!1,console.log("stopping record"),console.log(o.data.actionSet),o.data.actionSet.actions.length>1?e(o.data.actionSet):(console.log("%c Empty ActionList","font-size: 20px; background-color: red;"),e({log:"emptyActions"})),console.log("template is now:"),console.log(o.templates.actionSet),o.data.actionSet=structuredClone(o.templates.actionSet)},cacheSite:(t,e)=>{console.log("%c Caching site","font-size: 20px; background-color: green;");let a=structuredClone(o.templates.site);a.url=e,"newUrl"==t&&o.recording&&o.data.actionSet.actions.length>0?a.format="url":a.format="tab",o.recording?o.data.actionSet.actions.push(a):o.data.site=a},setCurrentPort:e=>{o.recording&&(t.current.port&&0==t.current.port.disconnected&&t.current.port.postMessage({action:"stopRecord"}),e.postMessage({action:"startRecord"}),o.data.inputs=[],o.data.caret=[],o.data.isSelection=!1,o.data.edit=[],o.data.redo=[]),t.current.port=e},parseLog:t=>{switch(console.log(t),t.type){case"click":if(console.log(t.textContext),o.data.actionSet.actions.push(t),null!=t.textContext){let e=o.data.inputs.find((e=>e.specifier==t.specifier));if(!e){let a={entry:structuredClone(o.templates.textAction),specifier:t.specifier,edit:[],redo:[]};""!=t.textContext&&(a.entry.text=t.textContext),o.data.inputs.push(a),o.data.actionSet.actions.push(a.entry),o.data.caret=t.caret.split("-").map((t=>Number(t))),o.data.isSelection=!(o.data.caret[0]===o.data.caret[1]),e=a}o.data.currentTextAction=e.entry,o.data.redo=e.redo,o.data.edit=e.edit,t.caret=void 0,t.textContext=void 0}break;case"input":console.log("input log"),console.log(o.data.currentTextAction),o.inputHandler(t.key,t.selection.split("-")),o.lastTextLog=t;break;case"key":switch(console.log("key log"),t.key){case"undo":console.log("undo"),o.data.edit.length>0&&(o.data.redo.push(o.data.currentTextAction.text),o.data.currentTextAction.text=o.data.edit.pop());break;case"redo":o.data.redo.length>0&&(o.data.edit.push(o.data.currentTextAction.text),o.data.currentTextAction.text=o.data.redo.pop());break;case"paste":o.inputHandler(t.text,t.selection.split("-"));break;case"cut":let e=t.selection.split("-");o.data.edit.push(o.data.currentTextAction.text),o.data.currentTextAction.text=o.data.currentTextAction.text.substring(0,e[0])+o.data.currentTextAction.text.substring(e[1],o.data.currentTextAction.text.length);break;case"all":o.data.caret[0]=0,o.data.caret[1]=o.data.currentTextAction.text.length;break;case"Enter":o.data.actionSet.actions.push(t);break;case"Backspace":let a=o.data.currentTextAction.text;o.data.currentTextAction.text=a.substring(0,o.data.caret[0]-1)+a.substring(o.data.caret[1]),o.data.caret=[o.data.caret[0]-1,o.data.caret[0]-1];break;case"ArrowLeft":o.data.isSelection||(o.data.caret[0]-=1),o.data.caret[1]=o.data.caret[0];break;case"ArrowRight":o.data.isSelection||(o.data.caret[1]+=1),o.data.caret[0]=o.data.caret[1];break;default:console.log("Default key log"),o.data.actionSet.actions.push(t)}}},inputHandler:t=>{let e=o.data.currentTextAction.text,a=t.length;o.data.edit.push(o.data.currentTextAction.text),o.data.currentTextAction.text=e.substring(0,o.data.caret[0])+t+e.substring(o.data.caret[1]),o.data.caret=[o.data.caret[0]+a,o.data.caret[0]+a]}},a={schedule:{times:[],actionLists:[]},checkTime:()=>{let t=Date.now();for(let e=0;e<a.schedule.times.length;e++)t>=a.schedule.times[e]&&(t-a.schedule.times[e]>1e4?(a.updateSchedule(e,!1),a.removeScheduledAction(e)):(a.completeIndex(e),a.updateSchedule(e,!0),a.removeScheduledAction(e)),e--)},completeIndex:async t=>{let o=a.schedule.actionLists[t].actions;console.log(o),await e.runActions(o)},addSchedule:t=>{a.schedule.actionLists.push(t),a.schedule.times.push(t.date)},updateSchedule:async(t,e)=>{let o=a.schedule.actionLists[t];o.state=e?"completed":"failed",chrome.storage.local.get(["pastEvents"]).then((t=>{null!=t.pastEvents?(t.pastEvents.push(o),chrome.storage.local.set(t)):chrome.storage.local.set({pastEvents:[o]})}))},removeScheduledAction:t=>{t>-1&&(a.schedule.actionLists.splice(t,1),a.schedule.times.splice(t,1),a.saveSchedule())},saveSchedule:()=>{chrome.storage.local.set({scheduledEvents:a.schedule.actionLists})}};chrome.alarms.onAlarm.addListener((async t=>{"clockAlarm"===t.name&&a.checkTime()})),(async()=>{await chrome.alarms.get("clockAlarm")||await chrome.alarms.create("clockAlarm",{periodInMinutes:.01})})(),chrome.storage.local.get(["recording"]).then((t=>{o.recording=null!=t.recording&&t.recording})),chrome.storage.local.get(["scheduledEvents"]).then((t=>{if(console.log(t),null!=t.scheduledEvents)for(let e of t.scheduledEvents)a.addSchedule(e)})),chrome.tabs.onUpdated.addListener((function(e,a,r){if(o.recording){let c=t.portArray.find((t=>t.tabId==e));c&&(c.name=r.url),a.title&&t.current.tab==e&&o.cacheSite("newUrl",r.url)}})),chrome.tabs.onActivated.addListener((e=>{console.log("Tab Activated"),chrome.tabs.get(e.tabId,(a=>{if("chrome://newtab/"!=a.url){let r=t.portArray.find((t=>t.tabId==e.tabId));r&&(console.log(`cached new site: ${a.url}`),o.cacheSite("newTab",a.url),o.setCurrentPort(r))}t.current.tab=e.tabId}))})),chrome.runtime.onConnect.addListener((function(e){console.log("Port Connected"),console.log(e),e.onMessage.addListener((function(a){switch(a.action){case"log":o.parseLog(a);break;case"resolve":t.current.actionPacket.resolve(a);break;case"closedEditor":let r=t.current.editor.editPromises.find((t=>t.tabId==e.tabId));r&&(r.resolve(a.actionList),t.current.editor.editPromises.splice(t.current.editor.editPromises.indexOf(r),1));break;case"closeEditor":console.log("messaged to close editor"),t.closeEditor();break;case"testLog":e.postMessage({action:"testCase"})}})),e.onDisconnect.addListener(t.disconnectPort),e.tabId=e.sender.tab.id;let a=0,r=t.portArray.find(((t,o)=>(a=o,t.tabId==e.sender.tab.id)));console.log(r),r&&(console.log("Port replaced: "+r.name),t.current.port==r&&(o.cacheSite("newUrl",r.name),o.setCurrentPort(e),o.recording&&e.postMessage({action:"startRecord"})),t.disconnectPort(r,a)),e.tabId==t.current.tab&&(o.cacheSite("newTab",e.name),t.current.port=e),t.portArray.push(e),console.log(t.portArray),console.log("Port Name: "+e.name),t.promisePorts.resolveTarget(e),console.log(t)})),chrome.runtime.onMessage.addListener(((r,c,n)=>{switch(r.action){case"startRecord":o.startRecord(n);break;case"stopRecord":o.stopRecord(n);break;case"scheduleActionSet":a.addSchedule(r.set),console.log(r.set),n({log:"added"});break;case"removeScheduledAction":let s=a.schedule.actionLists.findIndex((t=>t.id==r.id));a.removeScheduledAction(s),n({log:"removed"});break;case"runActionSet":e.runActions(r.set.actions);break;case"openEditor":t.current.editor?t.current.editor.id!=r.actionSet.name?n({log:"alreadyOpen"}):n({log:"noAction"}):((async o=>{let a={id:o.actionSet.name,portList:[],editPromises:[]};console.log(o);let r=e.getUrls(o.actionSet.actions);for(let e of r){let c=o.actionSet.actions.splice(o.actionSet.actions.indexOf(e)+1,r.indexOf(e)<r.length-1?o.actionSet.actions.indexOf(r[r.indexOf(e)+1]):o.actionSet.actions.length);console.log("portActions",c),t.openTab(e).then((t=>{a.portList.push(t),t.hasEditor?(t.postMessage({action:"openEditor",actionSet:{name:o.actionSet.name,actions:c}}),t.editorActive=!0):(chrome.scripting.executeScript({target:{tabId:t.tabId},files:["JS/editorUI.js"]}).then((()=>{t.postMessage({action:"openEditor",actionSet:{name:o.actionSet.name,actions:c}})})),t.editorActive=!0,t.hasEditor=!0)}))}t.current.editor=a})(r),n({log:"opened"}));break;case"closeEditor":console.log("close Editor Called"),t.current.editor?(console.log("running close editor"),t.closeEditor().then((t=>{console.log("closed editor finished"),n({log:"closed",actionList:t})}))):n({log:"noEditor"});break;case"testLog":console.log("test log"),n({log:"test"});break;case"init":t.uiLink=c,n({log:"init",lists:a.schedule.actionLists})}return!0}))})();